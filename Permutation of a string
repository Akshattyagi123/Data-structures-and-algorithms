class Solution
{
private:
    void solve(int index, vector<int> nums, vector<vector<int>> &ans)
    {
        // base case
        if (index >= nums.size())
        {
            ans.push_back(nums);
            return;
        }
        for (int j = index; j < nums.size(); j++)
        {
            swap(nums[index], nums[j]);
            // Recursive call
            solve(index + 1, nums, ans);
            // Backtrack
            swap(nums[index], nums[j]);
        }
    }

public:
    vector<vector<int>> permute(vector<int> &nums)
    {
        int index = 0;
        vector<vector<int>> ans;
        solve(index, nums, ans);
        return ans;
    }
};